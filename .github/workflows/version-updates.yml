name: Version Updates

on:
  push:
    branches:
      - develop

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Determine version bump
        id: determine-version
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1)
          if [[ $COMMIT_MSG == *"Release: "* ]]; then
            echo "Bumping Major Version"
            echo "bump=major" >> $GITHUB_ENV
          elif [[ $COMMIT_MSG == *("Major Update: "*|"New Feature: "*|"Improvement: "*|"Performance: "*|"Bug Fix: "*|"Security Fix: "*|"Hotfix: "*) ]]; then
            echo "Bumping Minor Version"
            echo "bump=minor" >> $GITHUB_ENV
          elif [[ $COMMIT_MSG == *("Minor Update: "*|"Documentation Update: "*|"Build: "*|"CI: "*|"Revert: "*|"Merge: "*|"Style: "*) ]]; then
            echo "Bumping Patch Version"
            echo "bump=patch" >> $GITHUB_ENV
          else
            echo "No version update"
            echo "bump=none" >> $GITHUB_ENV
          fi


      - name: Update manifest.json
        if: env.bump != 'none' # Use env here instead of steps.determine-version.outputs
        run: |
          sudo apt-get install -y jq
          
          CURRENT_VERSION=$(jq -r .version manifest.json)
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          if [[ "${{ env.bump }}" == "major" ]]; then
            NEW_ARTIFACT_VERSION="$((MAJOR + 1)).0.0"
          elif [[ "${{ env.bump }}" == "minor" ]]; then
            NEW_ARTIFACT_VERSION="${MAJOR}.$((MINOR + 1)).0"
          else
            NEW_ARTIFACT_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          fi

          # Printing the calculated version
          echo "Calculated version: $NEW_ARTIFACT_VERSION"

          # Store the NEW_ARTIFACT_VERSION for next steps
          echo "NEW_ARTIFACT_VERSION=$NEW_ARTIFACT_VERSION" >> $GITHUB_ENV

          jq --arg NEW_ARTIFACT_VERSION "$NEW_ARTIFACT_VERSION" '.version = $NEW_ARTIFACT_VERSION' manifest.json > manifest_updated.json
          mv manifest_updated.json manifest.json

      - name: Commit manifest.json
        if: env.bump != 'none' # Use env here instead of steps.determine-version.outputs
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/lakshaykaura/Yt_Max_Quality_Switcher.git
          git add manifest.json
          git commit -m "Artifact version bumped to ${{ env.NEW_ARTIFACT_VERSION }} in manifest.json" # Use env variable here for the NEW_ARTIFACT_VERSION
          # Printing branch name
          echo "Branch Name: ${{ github.ref }}"
          git push origin HEAD:${{ github.ref }}
